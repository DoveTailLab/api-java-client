/*
 * Onfido API
 * The Onfido API is used to submit check requests.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onfido.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.onfido.models.ReportDocument;
import com.onfido.models.ReportOption;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Report
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-06-06T14:26:48.203Z[GMT]")
public class Report {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_HREF = "href";
  @SerializedName(SERIALIZED_NAME_HREF)
  private String href;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_RESULT = "result";
  @SerializedName(SERIALIZED_NAME_RESULT)
  private String result;

  public static final String SERIALIZED_NAME_SUB_RESULT = "sub_result";
  @SerializedName(SERIALIZED_NAME_SUB_RESULT)
  private String subResult;

  public static final String SERIALIZED_NAME_BREAKDOWN = "breakdown";
  @SerializedName(SERIALIZED_NAME_BREAKDOWN)
  private Map<String, Object> breakdown = new HashMap<>();

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private Map<String, Object> properties = new HashMap<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_VARIANT = "variant";
  @SerializedName(SERIALIZED_NAME_VARIANT)
  private String variant;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private List<ReportOption> options = new ArrayList<>();

  public static final String SERIALIZED_NAME_DOCUMENTS = "documents";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS)
  private List<ReportDocument> documents = new ArrayList<>();

   /**
   * The unique identifier for the report. Read-only.
   * @return id
  **/
  @ApiModelProperty(value = "The unique identifier for the report. Read-only.")
  public String getId() {
    return id;
  }

   /**
   * The date and time at which the report was first initiated. Read-only.
   * @return createdAt
  **/
  @ApiModelProperty(value = "The date and time at which the report was first initiated. Read-only.")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

   /**
   * The API endpoint to retrieve the report. Read-only.
   * @return href
  **/
  @ApiModelProperty(value = "The API endpoint to retrieve the report. Read-only.")
  public String getHref() {
    return href;
  }

   /**
   * The current state of the report in the checking process. Read-only.
   * @return status
  **/
  @ApiModelProperty(value = "The current state of the report in the checking process. Read-only.")
  public String getStatus() {
    return status;
  }

   /**
   * The result of the report. Read-only.
   * @return result
  **/
  @ApiModelProperty(value = "The result of the report. Read-only.")
  public String getResult() {
    return result;
  }

   /**
   * The sub_result of the report. It gives a more detailed result for document reports only, and will be null otherwise. Read-only.
   * @return subResult
  **/
  @ApiModelProperty(value = "The sub_result of the report. It gives a more detailed result for document reports only, and will be null otherwise. Read-only.")
  public String getSubResult() {
    return subResult;
  }

   /**
   * The details of the report. This is specific to each type of report. Read-only.
   * @return breakdown
  **/
  @ApiModelProperty(value = "The details of the report. This is specific to each type of report. Read-only.")
  public Map<String, Object> getBreakdown() {
    return breakdown;
  }

   /**
   * The properties associated with the report, if any. Read-only.
   * @return properties
  **/
  @ApiModelProperty(value = "The properties associated with the report, if any. Read-only.")
  public Map<String, Object> getProperties() {
    return properties;
  }

  public Report name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the report type.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The name of the report type.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Report variant(String variant) {
    this.variant = variant;
    return this;
  }

   /**
   * The name of the report type variant, if required.
   * @return variant
  **/
  @ApiModelProperty(value = "The name of the report type variant, if required.")
  public String getVariant() {
    return variant;
  }

  public void setVariant(String variant) {
    this.variant = variant;
  }

  public Report options(List<ReportOption> options) {
    this.options = options;
    return this;
  }

  public Report addOptionsItem(ReportOption optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * List of Report Option objects.
   * @return options
  **/
  @ApiModelProperty(value = "List of Report Option objects.")
  public List<ReportOption> getOptions() {
    return options;
  }

  public void setOptions(List<ReportOption> options) {
    this.options = options;
  }

  public Report documents(List<ReportDocument> documents) {
    this.documents = documents;
    return this;
  }

  public Report addDocumentsItem(ReportDocument documentsItem) {
    if (this.documents == null) {
      this.documents = new ArrayList<>();
    }
    this.documents.add(documentsItem);
    return this;
  }

   /**
   * Array of objects with document ids that were used in the Onfido engine. [ONLY USED IN A DOCUMENT CHECK]
   * @return documents
  **/
  @ApiModelProperty(value = "Array of objects with document ids that were used in the Onfido engine. [ONLY USED IN A DOCUMENT CHECK]")
  public List<ReportDocument> getDocuments() {
    return documents;
  }

  public void setDocuments(List<ReportDocument> documents) {
    this.documents = documents;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Report report = (Report) o;
    return Objects.equals(this.id, report.id) &&
        Objects.equals(this.createdAt, report.createdAt) &&
        Objects.equals(this.href, report.href) &&
        Objects.equals(this.status, report.status) &&
        Objects.equals(this.result, report.result) &&
        Objects.equals(this.subResult, report.subResult) &&
        Objects.equals(this.breakdown, report.breakdown) &&
        Objects.equals(this.properties, report.properties) &&
        Objects.equals(this.name, report.name) &&
        Objects.equals(this.variant, report.variant) &&
        Objects.equals(this.options, report.options) &&
        Objects.equals(this.documents, report.documents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdAt, href, status, result, subResult, breakdown, properties, name, variant, options, documents);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Report {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    subResult: ").append(toIndentedString(subResult)).append("\n");
    sb.append("    breakdown: ").append(toIndentedString(breakdown)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    variant: ").append(toIndentedString(variant)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

